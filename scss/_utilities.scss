.overflow-container {
  width: 100vw;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: min-content;
}

// Padding
.py {
  &-1 {
    padding: 1rem 0;
  }
  &-2 {
    padding: 2rem 0;
  }
  &-3 {
    padding: 3rem 0;
  }
  &-4 {
    padding: 4rem 0;
  }
}

// Margin
.my {
  &-1 {
    margin: 1rem 0;
  }
  &-2 {
    margin: 2rem 0;
  }
  &-3 {
    margin: 3rem 0;
  }
  &-4 {
    margin: 4rem 0;
  }
}

.container {
  width: calc($website-width - 1.5rem);
  padding: 0 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.smaller {
  font-size: 1rem;
}

// Buttons
%btn-shared {
  display: inline-block;
  font-size: 1.1rem;
  min-width: 10rem;
  padding: 0.8rem 2rem;
  transition: all 0.5s;
  border: none;
  cursor: pointer;
  border-radius: 4px;
  margin: 0 auto;
}

.btn {
  &-main {
    @extend %btn-shared;
    color: $dark-color;
    background-color: $main-color;

    a {
      color: #000;

      &:hover {
        color: $dark-main-color;
      }
    }
  }

  &-light {
    @extend %btn-shared;
    color: $dark-color;
    background-color: $light-color;
  }
  &-dark {
    @extend %btn-shared;
    color: $light-color;
    background-color: $dark-color;
  }
}

button[class^='btn-']:hover,
a[class^='btn-']:hover,
input[class^='btn-']:hover {
  background-color: $light-main-color;
  color: $dark-main-color;
}

.lead {
  font-size: 1.3rem;
  margin-bottom: 2rem;
}

.text-center {
  text-align: center;
}

.type-cursor {
  border-right: #ccc solid 0.15rem;
}

.under-construction-banner {
  position: relative;
  &::before {
    content: 'Under Construction';
    position: absolute;
    top: 25%;
    left: 50%;
    width: 120vw;
    height: 2px;
    padding: 2rem;
    margin-top: -1px;
    line-height: 0px;
    background-color: rgba(255, 215, 102, 0.7);
    color: rgba(0, 0, 0, 0.7);
    text-align: center;
    text-transform: uppercase;
    font-size: 2rem;
    transform-origin: center;
    transform: translateX(-50%) rotate(-5deg);
    white-space: nowrap;
  }
}

// Animation
@mixin animate($animation, $duration, $method, $times) {
  & {
    animation: $animation $duration $method $times;
  }
}
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// // Switch
// .switch {
//   position: relative;
//   display: inline;
//   &-input {
//     opacity: 0;
//     width: 100%;
//     height: 0;
//   }
//   h3 {
//     display: block;
//     position: absolute;
//     top: 0;
//     left: 2rem;
//     right: 0;
//     cursor: pointer;
//   }
//   i.fa-chevron-down,
//   i.fa-chevron-up {
//     display: block;
//     position: absolute;
//     top: 0;
//     right: 6rem;
//     color: #000;
//     cursor: pointer;
//   }
//   i.fa-chevron-up,
//   p {
//     display: none;
//   }
//   p {
//     margin: 1rem 6rem 0 2rem;
//   }
//   &-input:checked ~ h3 {
//     color: $main-color;
//   }
//   &-input:checked ~ p {
//     display: block;
//   }
//   &-input:checked ~ i.fa-chevron-up {
//     display: block;
//     color: $main-color;
//   }
//   &-input:checked ~ i.fa-chevron-down {
//     display: none;
//   }
//   &-line {
//     border-bottom: $medium-color 1px dotted;
//     height: 0;
//     margin: 1rem 0;
//   }
// }

